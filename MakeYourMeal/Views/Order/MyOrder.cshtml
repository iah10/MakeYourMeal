@using MakeYourMeal.Data.Models
@model IEnumerable<MakeYourMeal.Data.Models.Order>

@{
	ViewBag.Title = "My Order";
	int i = 1;
}
<div class="myorder-page">
	<div class="myorder-page-container">
		<h1>My Orders</h1>

		<h2>Orders In Progress</h2>

		@{
			foreach (var order in Model)
			{
				<h3> Order @i</h3>
				<div>
					<dl class="dl-horizontal">
						<dt>
							@Html.DisplayNameFor(o => o.TableNumber)
						</dt>

						<dd>
							@Html.DisplayFor(o => order.TableNumber)
						</dd>

						<dt>
							@Html.DisplayNameFor(o => o.OrderedAt)
						</dt>

						<dd>
							@Html.DisplayFor(o => order.OrderedAt)
						</dd>

						<dt>
							@Html.DisplayNameFor(o => o.TotalCost)
						</dt>

						<dd>
							@Html.DisplayFor(o => order.TotalCost)
						</dd>

						<dt>
							@Html.DisplayNameFor(o => o.State)
						</dt>

						<dd>
							@Html.DisplayFor(o => order.State)
						</dd>

					</dl>
				</div>
				<h3>Order Items</h3>
				<ul>
					@foreach (var ing in order.OrderItems)
					{
						<li>
							@ing.FoodItemName
							@if (order.OrderState.State.Equals(OrderState.NEW_ORDER))
							{
								<span>@Html.ActionLink("Delete", "DeleteOrderItem", new { id = ing.OrderItemId }, new { @class = "btn delete", @role = "button" })</span>
							}
						</li>
					}
				</ul>
				if (order.OrderState.State.Equals(OrderState.NEW_ORDER))
				{
					@Html.ActionLink("Commit Order", "CommitCurrentOrder")
				}
			}
		}
		<p>
			@Html.ActionLink("Back to List", "Index", "FoodItems")
		</p>
	</div>
</div>
@section scripts
{

	<script src="~/Scripts/jquery.signalR-2.2.0.js"></script>
	<script type="text/javascript" src="~/signalr/hubs"></script>
	<script src="~/Scripts/toastr.min.js"></script>
	<script>
		$(function () {

			//start hub
			var hub = $.connection.customersHub;

			//order receivied
			hub.client.orderStateChanged = function (state) {
				toastr.info("Your Order Is Now " + state);
			}

			//start real time connection
			$.connection.hub.start().done(function () {
				hub.server.registerConId(@ViewBag.TableNumber);
			});

			//get the orderItems count
			$.get("/Order/GetCountOfCurrentOrder", function (count) {
				viewModel.numberOfNoti(count);
			}, "json");


			$('.delete').click(function () {
				$(this).parent().parent().remove();
				$.post(this.href, function (result) {
					viewModel.numberOfNoti(viewModel.numberOfNoti() - 1);
				});
				return false;
			});

		});
	</script>
}