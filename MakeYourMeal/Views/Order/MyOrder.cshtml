@using MakeYourMeal.Data.Models
@model IEnumerable<MakeYourMeal.Data.Models.Order>

@{
	ViewBag.Title = "My Order";
	int i = 1;
}
<body class="myorder-page">
	<div class="myorder-page-container">
		<h1>My Orders</h1>

		@foreach (var order in Model)
		{
			<div class="sheet-container">

				<div>
					<dl class="dl-horizontal ">
						<dt>
							@Html.DisplayNameFor(o => o.TableNumber)
						</dt>

						<dd>
							@Html.DisplayFor(o => order.TableNumber)
						</dd>

						<dt>
							@Html.DisplayNameFor(o => o.OrderedAt)
						</dt>

						<dd>
							@Html.DisplayFor(o => order.OrderedAt)
						</dd>

						<dt>
							@Html.DisplayNameFor(o => o.TotalCost)
						</dt>

						<dd data-bind="text: TotalCost() > -1 ? TotalCost(): @order.TotalCost">
						</dd>
					</dl>
				</div>

				<h3> Order @i</h3>

				<ul>
					@foreach (var ing in order.OrderItems)
					{
						<li>
							<span>@ing.FoodItemName</span>

							@if (!(ing.FoodItem.CategoryName.Equals(Category.BEVERAGES) || ing.FoodItem.CategoryName.Equals(Category.DESSERTS) || ing.FoodItem.CategoryName.Equals(Category.SIDES)))
							{
								if(ing.ExtraIngredients.Count!=0){
									<p>
										+ Extra(
										@foreach (var change in @ing.ExtraIngredients)
										{
											<span>@change.Name</span>
										})
									</p>
								}

								if(ing.WithoutIngredients.Count!=0){
								<p>
									- Without(
									@foreach (var change in @ing.WithoutIngredients)
									{
										<span>@change.Name</span>
									})
								</p>
								}
							}

							@if (order.OrderState.State.Equals(OrderState.NEW_ORDER))
							{
								<span>@Html.ActionLink("Delete", "DeleteOrderItem", new { id = ing.OrderItemId }, new { @class = "btn delete btn-default", @role = "button" })</span>
							}
						</li>
					}
				</ul>

				<button class="btn-default">
					@if (order.OrderState.State.Equals(OrderState.NEW_ORDER) && order.OrderItems.Count > 0)
					{
						@Html.ActionLink("Commit Order", "CommitCurrentOrder")
					}
				</button>
			</div>
		}
	</div>

	<div class="footer">
		<p>
			@Html.ActionLink("Back to List", "Index", "FoodItems")
		</p>
	</div>
</body>
@section scripts
{

	<script src="~/Scripts/jquery.signalR-2.2.0.js"></script>
	<script type="text/javascript" src="~/signalr/hubs"></script>
	<script src="~/Scripts/toastr.min.js"></script>
	<script>
		var NotiApp = NotiApp || {};

		NotiApp.Noti = function (item) {
			var self = this;
			self.numberOfNoti = ko.observable(0);
			self.TotalCost = ko.observable(-1);
		};
		var viewModel;
		$(function () {

			//init knoukcout
			viewModel = new NotiApp.Noti();

			//let knouckout do it's magic
			ko.applyBindings(viewModel, document.getElementById("#nav"));

			//start hub
			var hub = $.connection.customersHub;

			//order receivied
			hub.client.orderStateChanged = function (state) {
				toastr.info("Your Order Is Now " + state);
			}

			//start real time connection
			$.connection.hub.start().done(function () {
				hub.server.registerConId(@ViewBag.TableNumber);
			});

			//get the orderItems count
			$.get("/Order/GetCountOfCurrentOrder", function (count) {
				viewModel.numberOfNoti(count);
			}, "json");


			$('.delete').click(function () {
				$(this).parent().parent().remove();
				//viewModel.TotalCost(viewModel.TotalCost() - 1);
				$.post(this.href, function (result) {
					viewModel.TotalCost(result);
					viewModel.numberOfNoti(viewModel.numberOfNoti() - 1);
				});
				return false;
			});

		});
	</script>
}
